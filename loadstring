-- FE Fling Script with Teleport Feature
-- Teleports to players and flings them without getting flung yourself

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

-- Settings
local settings = {
    flingSpeeds = {
        rotationSpeed = 100,  -- How fast to rotate
        velocity = 500,       -- Velocity multiplier
        maxForce = 9999,      -- Maximum force multiplier
        flingTime = 1.5,      -- Time to fling each player before moving to next
        teleportDistance = 3  -- Distance to teleport from target
    },
    enabled = true,
    noClip = true             -- Enable no-clip to prevent getting stuck
}

-- Notification function
local function notify(text)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "FE Fling Script";
        Text = text;
        Duration = 3;
    })
end

-- Check if the character has a humanoid root part
if not Character:FindFirstChild("HumanoidRootPart") then
    notify("Character missing HumanoidRootPart. Try respawning.")
    return
end

local HRP = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")

-- Set character properties
if Humanoid then
    Humanoid.AutoRotate = false -- Prevent automatic rotation
end

-- Variables for flinging
local targetPlayer = nil
local flingTimer = 0
local isTeleporting = false

-- Create a new body velocity
local bodyVelocity = Instance.new("BodyVelocity")
bodyVelocity.MaxForce = Vector3.new(settings.flingSpeeds.maxForce, settings.flingSpeeds.maxForce, settings.flingSpeeds.maxForce)
bodyVelocity.P = 1250
bodyVelocity.Velocity = Vector3.new(0, 0, 0)
bodyVelocity.Parent = HRP

-- Create a new body angular velocity for spinning
local bodyAngularVelocity = Instance.new("BodyAngularVelocity")
bodyAngularVelocity.AngularVelocity = Vector3.new(settings.flingSpeeds.rotationSpeed, settings.flingSpeeds.rotationSpeed, settings.flingSpeeds.rotationSpeed)
bodyAngularVelocity.MaxTorque = Vector3.new(settings.flingSpeeds.maxForce, settings.flingSpeeds.maxForce, settings.flingSpeeds.maxForce)
bodyAngularVelocity.P = 1250
bodyAngularVelocity.Parent = HRP

-- No-clip function to prevent getting stuck
local function activateNoClip()
    if settings.noClip then
        for _, part in pairs(Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end

-- Function to get the next target
local function getNextTarget()
    local playerList = Players:GetPlayers()
    local validTargets = {}
    
    for _, player in pairs(playerList) do
        if player ~= LocalPlayer then
            local targetCharacter = player.Character
            if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                table.insert(validTargets, player)
            end
        end
    end
    
    if #validTargets > 0 then
        return validTargets[math.random(1, #validTargets)]
    end
    return nil
end

-- Function to teleport to a player
local function teleportToPlayer(player)
    if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local targetHRP = player.Character.HumanoidRootPart
    local targetCFrame = targetHRP.CFrame
    
    -- Teleport slightly behind the target
    local teleportOffset = targetCFrame.lookVector * -settings.teleportDistance
    HRP.CFrame = targetCFrame + teleportOffset
    
    return true
}

-- Toggle function with keyboard shortcut
local function toggleFling()
    settings.enabled = not settings.enabled
    if settings.enabled then
        notify("Fling Enabled")
        bodyVelocity.Parent = HRP
        bodyAngularVelocity.Parent = HRP
        targetPlayer = getNextTarget()
        if targetPlayer then
            notify("Now targeting: " .. targetPlayer.Name)
        end
    else
        notify("Fling Disabled")
        bodyVelocity.Parent = nil
        bodyAngularVelocity.Parent = nil
        
        -- Reset character collision
        for _, v in pairs(Character:GetDescendants()) do
            if v:IsA("BasePart") then
                v.CanCollide = true
            end
        end
    end
end

-- Connect toggle to a key press (X key)
local UserInputService = game:GetService("UserInputService")
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.X then
        toggleFling()
    end
end)

-- Main loop
RunService.Heartbeat:Connect(function(deltaTime)
    if not settings.enabled then return end
    
    -- Activate No-Clip
    activateNoClip()
    
    -- Update the fling timer
    flingTimer = flingTimer + deltaTime
    
    -- Switch targets and teleport when the timer expires
    if flingTimer >= settings.flingSpeeds.flingTime or targetPlayer == nil or 
       not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        
        targetPlayer = getNextTarget()
        flingTimer = 0
        
        if targetPlayer then
            notify("Now targeting: " .. targetPlayer.Name)
            if teleportToPlayer(targetPlayer) then
                -- Successful teleport
            else
                notify("Failed to teleport to target")
            end
        else
            notify("No valid targets found")
        end
    end
    
    -- If we have a target, actively fling them
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetHRP = targetPlayer.Character.HumanoidRootPart
        local direction = (targetHRP.Position - HRP.Position).Unit
        
        -- Teleport frequently to stay near the target
        if flingTimer % 0.3 < 0.05 and not isTeleporting then
            isTeleporting = true
            teleportToPlayer(targetPlayer)
            isTeleporting = false
        end
        
        -- Set velocity toward target
        bodyVelocity.Velocity = direction * settings.flingSpeeds.velocity
        
        -- Spin at maximum speed
        bodyAngularVelocity.AngularVelocity = Vector3.new(
            settings.flingSpeeds.rotationSpeed * 2,
            settings.flingSpeeds.rotationSpeed * 2,
            settings.flingSpeeds.rotationSpeed * 2
        )
    end
end)

-- Initial notification
notify("FE Fling Script Loaded! Press X to toggle")
